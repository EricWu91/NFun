|****************************************
| TEST cos sin abs   
| TAGS built-in-function
|************************  
| int: x:real
| out  r:real 
|------------------------
  y = x.cos()**2 + x.sin()**2
  z = (y-1).abs() < 0.001
|---------------------
| set: x:-0.2
| check z: true
| set: x:3
| check z: true



|****************************************
| TEST cos sin tan   
| TAGS built-in-function
|************************  
| int: x:real
| out  ycos:real, ysin: real, ytan: real 
|------------------------
  ycos = x.cos()
  ysin = x.cos()
  ytan = x.tan()
|---------------------
| set: x:0
| check ycos: 1, ysin: 0, ytan:0



|****************************************
| TEST flat   
| TAGS built-in-function
|************************  
| out  iflat:int[], tflat:text 
|------------------------
 tflat = ['hi',' ','my name', ' is', ' fun']
 iflat = [[0,1],[2,3],[4,5],[6]].flat()
|---------------------
| check iflat:[0,1,2,3,4,5,6], tflat:['hi my name is fun']



|****************************************
| TEST reduce 2   
| TAGS built-in-function reduce
|************************  
  max = [1,2,6,54,2,76,8,3].reduce((acc,cur)-> if (cur>acc) cur else acc)
|---------------------
| check max: 76



|****************************************
| TEST linq#1   
| TAGS built-in-function map filter count 
|************************  
| in   x:text[]
| out  aaa:int[], tot:int[] 
|------------------------
 #x is array of texts
   achar = 'a'[0]
 
 # aaa is count of 'a' chars in texts, witch contains N or more 
 # 'a' chars 
   aaa = x
   		.map(s->s.count(j->j==achar))
   		.filter(s->s >= n)
 
 # tot is lengths of texts witch contain N or more  
 # 'a' chars 
   tot = x
   		.filter(
   				s-> n<= s.count(j->j==achar)
   			)    
   		.map(count)

|---------------------
| set x:[vasa,kata], n:3
| check aaa: [], tot:[]
| set x:[vasaa,kataaa, jony, aa,  mashaaa, aaa_aaa_aaa], n:3
| check aaa: [3,4,4,9], tot:[5,6,7,11]
| set x:[vasa,kata], n:2
| check aaa: [2,2], tot:[4,4]




|****************************************
| TEST reduce 3   
| TAGS built-in-function reduce
|************************  
  concat = ['we','will','rock','you'].reduce('singing:', (acc,cur)-> [acc, ' ',cur].flat())
|---------------------
| check concat: 'singing: we will rock you' 

| TEST odds   
| TAGS built-in-function
|************************  
| int: x:int[]
| out  ysum:int, ymulti: int, ymin: int, ymax:int 
|------------------------
  ysum = x.filter(i->i%2==0).sum()
  ymulti = x.filter(i->i%2).reduce((s,i)-> s*i)
  ymin = x.filter(i->i%2).reduce(min)
  ymax = x.filter(i->i%2).reduce(max)
|---------------------
| set: x:[0,1,2,3,4,5,6,7,8,9]
| check ysum:20, ymulti:384, ymin:0, ymax:8


|****************************************
| TEST int join
| TAGS text array join
|************************
  
  origin:int[]
  origin.join(', ') 
  
|------------------
| set origin:[1,2,3,4,5]
| check out:'1, 2, 3, 4, 5'
| set origin:[3,2]
| check out:'3, 2'


|****************************************
| TEST text join
| TAGS text array join
|************************
  origin:text
  origin.join(', ') 
|------------------
| set origin:['','a','b']
| check out:', a, b'

|****************************************
| TEST trim
| TAGS text array trim
|************************
  origin.trim()
|------------------
| set origin: ' hi with start and end  '
| check out:'hi with start and end'


|****************************************
| TEST trim start
| TAGS text array trimStart
|************************
  origin.trimStart()
|------------------
| set origin: ' hi with start and end  '
| check out:'hi with start and end  '

|****************************************
| TEST trim end
| TAGS text array trimEnd
|************************
  origin.trimEnd()
|------------------
| set origin: ' hi with start and end  '
| check out:' hi with start and end'


|****************************************
| TEST text join split
| TAGS text join split
|************************
  origin:text
  origin.split(' ').join('-') 
|------------------
| set origin: 'hello my lovely world'
| check out:'hello-my-lovely-world'
| set origin:''
| check out:''
| set origin:' '
| check out:''
| set origin: ' hello   my lovely  world'
| check out:'hello-my-lovely-world'


|****************************************
| TEST int join split
| TAGS int join split
|************************
  origin.split(42).join(2) 
|------------------
| set origin: [1,42,42,2,3,42]
| check out:[1,2,2,3]
