|****************************************
| TEST constant user function  
| TAGS constant function
|************************  
| out i:int, a:int[], r:real, t:text 
|------------------------
  takeInt():int = 1
  takeArr():int[] = [1,2,3]
  takeReal():real = 1.0
  takeText():text = 'abc'

  i = takeInt()
  a = takeArr()
  r = takeReal()
  t = takeText()
|---------------------
| check i:1, a:[1,2,3], r:1.0, t:'abc'




|****************************************
| TEST sum of int and real  
| TAGS function
|************************  
| in  x:int, y:real
| out r:real 
|------------------------
  mysum(i:int, r:real):real = i+r
  
  r = mysum(x,y)
|---------------------
| set x:-100, y: 100.0
| check r: 0.0
| set x:100, y: -100.0
| check r: 0.0
| set x:1, y: -42.5
| check r: -41.5




|****************************************
| TEST user function overloads  
| TAGS overload user-function
|************************  
| in  x:int
| out singlearg:int, twinarg:int 
|------------------------
  inc(i:int, j) = i+j
  inc(i:int) = inc(i,1)
  
  singlearg = inc(x)
  twinarg = inc(x,10)  
|---------------------
| set x:-100
| check singlearg: -99, twinarg: -90
| set x:100, 
| check singlearg: 101, twinarg: 110




|****************************************
| TEST user and buildin function overloads  
| TAGS overload user-function
|************************  
| in   i:real[]
| out  userfun:real, builtin:real 
|------------------------
  #custom user function max(r r r) overloads
  #built in function max(r r)
  max(i, j, k) = i.max(j).max(k)
  
  userfun = max(i[0], i[1], i[2])
  builtin = max(i[0], i[1])
|---------------------
| set i:[0,1,2]
| check userfun:2, builtin:1
| set i:[-5,-7,10]
| check userfun:10, builtin:-5
| set i:[10,-7,10]
| check userfun:10, builtin:10






|****************************************
| TEST req from a to b
| TAGS req user-function
|************************  
| in  a:int, b:int
| out  out:text 
|------------------------
  concat(a,b) = a.toText().concat(' ').concat(b)

  f(a,b) = 
          if(a>b)  concat(a, f(a-1,b))
          if(b>a)  concat(a, f(a+1,b)) 
          else a.toText()
              
  f(a,b)        
|---------------------
| set a:1, b:5
| check out: '1,2,3,4,5'
| set a :9, b:12
| check out: '9,10,11,12'
| set a:12, b:9
| check out: '12,11,10,9'
